-- -----------------------------------------------------------------------------
--             Generation d'une base de donnees pour
--                      Oracle Version 10g
--                        (15/12/2022 8:43:09)
-- -----------------------------------------------------------------------------
--      Nom de la base : MLR1
--      Projet : 
--      Auteur : IUT BLAGNAC
--      Date de derniere modification : 15/12/2022 8:42:45
-- -----------------------------------------------------------------------------

DROP TABLE CARTEBANCAIRE CASCADE CONSTRAINTS;

DROP TABLE PAIEMENT CASCADE CONSTRAINTS;

DROP TABLE CATEGORIE CASCADE CONSTRAINTS;

DROP TABLE ADMINISTRATEUR CASCADE CONSTRAINTS;

DROP TABLE COMMANDE CASCADE CONSTRAINTS;

DROP TABLE ARTISTE CASCADE CONSTRAINTS;

DROP TABLE CRYPTOMONNAIE CASCADE CONSTRAINTS;

DROP TABLE CLIENT CASCADE CONSTRAINTS;

DROP TABLE ARTICLE CASCADE CONSTRAINTS;

DROP TABLE ACTEUR CASCADE CONSTRAINTS;

DROP TABLE DETAILCOMMANDE CASCADE CONSTRAINTS;

DROP TABLE AVIS CASCADE CONSTRAINTS;

DROP TABLE PANIER CASCADE CONSTRAINTS;

-- -----------------------------------------------------------------------------
--       CREATION DE LA BASE 
-- -----------------------------------------------------------------------------

CREATE DATABASE MLR1;

-- -----------------------------------------------------------------------------
--       TABLE : CARTEBANCAIRE
-- -----------------------------------------------------------------------------

CREATE TABLE CARTEBANCAIRE
   (
    NUMCB CHAR(16)  NOT NULL,
    NUMPAIEMENT NUMBER(6)  NOT NULL,
    IDACTEUR NUMBER(5)  NOT NULL,
    NOMCB VARCHAR(30)  NULL,
    DATEEXPIRATION CHAR(4)  NULL,
    CRYPTOGRAMME NUMBER(3)  NULL,
    SUPPORTPAIEMENT CHAR(1)  NULL,
    CONSTRAINT PK_CARTEBANCAIRE PRIMARY KEY (NUMCB),
    CONSTRAINT CH_SUPPAIEMENTCB CHECK(SUPPORTPAIEMENT='M' OR SUPPORTPAIEMENT='V')
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE CARTEBANCAIRE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_CARTEBANCAIRE_CLIENT
     ON CARTEBANCAIRE (IDACTEUR ASC)
    ;

CREATE  INDEX I_FK_CARTEBANCAIRE_PAIEMENT
     ON CARTEBANCAIRE (NUMPAIEMENT ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : PAIEMENT
-- -----------------------------------------------------------------------------

CREATE TABLE PAIEMENT
   (
    NUMPAIEMENT NUMBER(6)  NOT NULL,
    SUPPORTPAIEMENT CHAR(1)  NULL,
    CONSTRAINT PK_PAIEMENT PRIMARY KEY (NUMPAIEMENT),  
    CONSTRAINT CH_SUPPAIEMENT CHECK (SUPPORTPAIEMENT='M' OR SUPPORTPAIEMENT='V' OR SUPPORTPAIEMENT='B' OR SUPPORTPAIEMENT='E') 
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : CATEGORIE
-- -----------------------------------------------------------------------------

CREATE TABLE CATEGORIE
   (
    NOMCATEGORIE VARCHAR(128)  NOT NULL,
    LIBELLECATEGORIE VARCHAR(128)  NULL,
    CONSTRAINT PK_CATEGORIE PRIMARY KEY (NOMCATEGORIE),  
    CONSTRAINT CH_NOMCATEGORIE CHECK(NOMCATEGORIE='PELUCHES' OR NOMCATEGORIE='POSTERS' OR NOMCATEGORIE='FIGURINES')
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : ADMINISTRATEUR
-- -----------------------------------------------------------------------------

CREATE TABLE ADMINISTRATEUR
   (
    IDADMIN NUMBER(5)  NOT NULL,
    PRENOMADMIN VARCHAR(32)  NULL,
    NOMADMIN VARCHAR(32)  NULL,
    MAILADMIN VARCHAR(128)  NULL,
    MDPADMIN VARCHAR(128)  NULL,
    CONSTRAINT PK_ADMINISTRATEUR PRIMARY KEY (IDADMIN)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : COMMANDE
-- -----------------------------------------------------------------------------

CREATE TABLE COMMANDE
   (
    IDCOMMANDE NUMBER(10)  NOT NULL,
    NUMPAIEMENT NUMBER(6)  NOT NULL,
    IDACTEUR NUMBER(5)  NOT NULL,
    DATECOMMANDE DATE  NULL,
    ADRLIVRAISON VARCHAR(128)  NULL,
    INSTRUCTIONSCOMMANDE VARCHAR(128)  NULL,
    ETATCOMMANDE CHAR(1)  NULL,
    CONSTRAINT PK_COMMANDE PRIMARY KEY (IDCOMMANDE),  
    CONSTRAINT CH_ETATCOMMANDE CHECK(ETATCOMMANDE='T' OR ETATCOMMANDE='P' OR ETATCOMMANDE='E' OR ETATCOMMANDE='R')
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE COMMANDE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_COMMANDE_CLIENT
     ON COMMANDE (IDACTEUR ASC)
    ;

CREATE  INDEX I_FK_COMMANDE_PAIEMENT
     ON COMMANDE (NUMPAIEMENT ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : ARTISTE
-- -----------------------------------------------------------------------------

CREATE TABLE ARTISTE
   (
    IDACTEUR NUMBER(5)  NOT NULL,
    IDACTEUR_1 NUMBER(5)  NOT NULL,
    NOMACTEUR VARCHAR(32)  NULL,
    PRENOMACTEUR VARCHAR(32)  NULL,
    ADRACTEUR VARCHAR(128)  NULL,
    MAILACTEUR VARCHAR(128)  NULL,
    MDPACTEUR VARCHAR(128)  NULL,
    PREFLANGUE CHAR(8)  NULL,
    PREFTHEME CHAR(6)  NULL,
    CONSTRAINT PK_ARTISTE PRIMARY KEY (IDACTEUR),  
    CONSTRAINT CH_PREFLANGUEAR CHECK(PREFLANGUE='FRANCAIS' OR PREFLANGUE='ANGLAIS'),
    CONSTRAINT CH_PREFTHEMEAR CHECK(PREFTHEME='CLAIR' OR PREFTHEME='SOMBRE')
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE ARTISTE
-- -----------------------------------------------------------------------------

CREATE UNIQUE INDEX I_FK_ARTISTE_CLIENT
     ON ARTISTE (IDACTEUR_1 ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : CRYPTOMONNAIE
-- -----------------------------------------------------------------------------

CREATE TABLE CRYPTOMONNAIE
   (
    NUMREF NUMBER(10)  NOT NULL,
    NUMPAIEMENT NUMBER(6)  NOT NULL,
    SUPPORTPAIEMENT CHAR(1)  NULL,
    CONSTRAINT PK_CRYPTOMONNAIE PRIMARY KEY (NUMREF),
    CONSTRAINT CH_SUPPAIEMENTCM CHECK(SUPPORTPAIEMENT='B' OR SUPPORTPAIEMENT='E')
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE CRYPTOMONNAIE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_CRYPTOMONNAIE_PAIEMENT
     ON CRYPTOMONNAIE (NUMPAIEMENT ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : CLIENT
-- -----------------------------------------------------------------------------

CREATE TABLE CLIENT
   (
    IDACTEUR NUMBER(5)  NOT NULL,
    MONTANTTOTAL NUMBER(10,2)  NULL,
    PTSFIDELITECLIENT NUMBER(3)  NULL,
    PREFMONNAIE CHAR(2)  NULL,
    NOMACTEUR VARCHAR(32)  NULL,
    PRENOMACTEUR VARCHAR(32)  NULL,
    ADRACTEUR VARCHAR(128)  NULL,
    MAILACTEUR VARCHAR(128)  NULL,
    MDPACTEUR VARCHAR(128)  NULL,
    PREFLANGUE CHAR(2)  NULL,
    PREFTHEME VARCHAR(6)  NULL,
    CONSTRAINT PK_CLIENT PRIMARY KEY (IDACTEUR), 
    CONSTRAINT CH_PREFMONNAIE CHECK(PREFMONNAIE='CB' OR PREFMONNAIE='CR'),
    CONSTRAINT CH_PREFLANGUECL CHECK(PREFLANGUE='FR' OR PREFLANGUE='EN'),
    CONSTRAINT CH_PREFTHEMECL CHECK(PREFTHEME='CLAIR' OR PREFTHEME='SOMBRE')
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : ARTICLE
-- -----------------------------------------------------------------------------

CREATE TABLE ARTICLE
   (
    IDARTICLE NUMBER(5)  NOT NULL,
    NOMARTICLE VARCHAR(128) NOT NULL,
    NOMCATEGORIE VARCHAR(128)  NOT NULL,
    PRIXARTICLE NUMBER(8,2)  NULL,
    PRIXPROMO NUMBER(2)  NULL,
    COULEUR VARCHAR(10)  NULL,
    CONSTRAINT PK_ARTICLE PRIMARY KEY (IDARTICLE),  
    CONSTRAINT CH_PRIXARTICLE CHECK(PRIXARTICLE >= 1 AND PRIXARTICLE < 1000000),
    CONSTRAINT CH_PRIXPROMO CHECK(PRIXPROMO >= 10 AND PRIXPROMO <= 70),
    CONSTRAINT CH_COULEUR CHECK(COULEUR='ROUGE' OR COULEUR='BLEU' OR COULEUR='VERT' OR COULEUR='JAUNE' OR COULEUR='ORANGE' OR COULEUR='MARRON' OR COULEUR='NOIR' OR COULEUR='BLANC' OR COULEUR='VIOLET' OR COULEUR='ROSE' OR COULEUR='GRIS')
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE ARTICLE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_ARTICLE_CATEGORIE
     ON ARTICLE (NOMCATEGORIE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : ACTEUR
-- -----------------------------------------------------------------------------

CREATE TABLE ACTEUR
   (
    IDACTEUR NUMBER(5)  NOT NULL,
    NOMACTEUR VARCHAR(32)  NULL,
    PRENOMACTEUR VARCHAR(32)  NULL,
    ADRACTEUR VARCHAR(128)  NULL,
    MAILACTEUR VARCHAR(128)  NULL,
    MDPACTEUR VARCHAR(128)  NULL,
    PREFLANGUE CHAR(8)  NULL,
    PREFTHEME CHAR(6)  NULL,
    CONSTRAINT PK_ACTEUR PRIMARY KEY (IDACTEUR),  
    CONSTRAINT CH_PREFLANGUEAC CHECK(PREFLANGUE='FRANCAIS' OR PREFLANGUE='ANGLAIS'),
    CONSTRAINT CH_PREFTHEMEAC CHECK(PREFTHEME='CLAIR' OR PREFTHEME='SOMBRE')
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : DETAILCOMMANDE
-- -----------------------------------------------------------------------------

CREATE TABLE DETAILCOMMANDE
   (
    IDCOMMANDE NUMBER(10)  NOT NULL,
    IDARTICLE NUMBER(5)  NOT NULL,
    QUANTITEARTICLE NUMBER(3)  NULL,
    CONSTRAINT PK_DETAILCOMMANDE PRIMARY KEY (IDCOMMANDE, IDARTICLE), 
    CONSTRAINT CH_QUANTITEARTICLEDC CHECK(QUANTITEARTICLE >= 1 AND QUANTITEARTICLE <= 999)
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE DETAILCOMMANDE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_DETAILCOMMANDE_COMMANDE
     ON DETAILCOMMANDE (IDCOMMANDE ASC)
    ;

CREATE  INDEX I_FK_DETAILCOMMANDE_ARTICLE
     ON DETAILCOMMANDE (IDARTICLE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : AVIS
-- -----------------------------------------------------------------------------

CREATE TABLE AVIS
   (
    IDACTEUR NUMBER(5)  NOT NULL,
    IDARTICLE NUMBER(5)  NOT NULL,
    AVIS VARCHAR(500)  NULL,
    NOTE NUMBER(2,1)  NULL,
    CONSTRAINT PK_AVIS PRIMARY KEY (IDACTEUR, IDARTICLE),  
    CONSTRAINT CH_NOTE CHECK(NOTE<=5)
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE AVIS
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_AVIS_CLIENT
     ON AVIS (IDACTEUR ASC)
    ;

CREATE  INDEX I_FK_AVIS_ARTICLE
     ON AVIS (IDARTICLE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : PANIER
-- -----------------------------------------------------------------------------

CREATE TABLE PANIER
   (
    IDACTEUR NUMBER(5)  NOT NULL,
    IDARTICLE NUMBER(5)  NOT NULL,
    QUANTITEARTICLE NUMBER(3)  NULL,
    CONSTRAINT PK_PANIER PRIMARY KEY (IDACTEUR, IDARTICLE),  
    CONSTRAINT CH_QUANTITEARTICLEP CHECK(QUANTITEARTICLE >= 1 AND QUANTITEARTICLE <= 999)
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE PANIER
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_PANIER_CLIENT
     ON PANIER (IDACTEUR ASC)
    ;

CREATE  INDEX I_FK_PANIER_ARTICLE
     ON PANIER (IDARTICLE ASC)
    ;


-- -----------------------------------------------------------------------------
--       CREATION DES REFERENCES DE TABLE
-- -----------------------------------------------------------------------------


ALTER TABLE CARTEBANCAIRE ADD (
     CONSTRAINT FK_CARTEBANCAIRE_CLIENT
          FOREIGN KEY (IDACTEUR)
               REFERENCES CLIENT (IDACTEUR))   ;

ALTER TABLE CARTEBANCAIRE ADD (
     CONSTRAINT FK_CARTEBANCAIRE_PAIEMENT
          FOREIGN KEY (NUMPAIEMENT)
               REFERENCES PAIEMENT (NUMPAIEMENT))   ;

ALTER TABLE COMMANDE ADD (
     CONSTRAINT FK_COMMANDE_CLIENT
          FOREIGN KEY (IDACTEUR)
               REFERENCES CLIENT (IDACTEUR))   ;

ALTER TABLE COMMANDE ADD (
     CONSTRAINT FK_COMMANDE_PAIEMENT
          FOREIGN KEY (NUMPAIEMENT)
               REFERENCES PAIEMENT (NUMPAIEMENT))   ;

ALTER TABLE ARTISTE ADD (
     CONSTRAINT FK_ARTISTE_CLIENT
          FOREIGN KEY (IDACTEUR_1)
               REFERENCES CLIENT (IDACTEUR))   ;

ALTER TABLE ARTISTE ADD (
     CONSTRAINT FK_ARTISTE_ACTEUR
          FOREIGN KEY (IDACTEUR)
               REFERENCES ACTEUR (IDACTEUR))   ;

ALTER TABLE CRYPTOMONNAIE ADD (
     CONSTRAINT FK_CRYPTOMONNAIE_PAIEMENT
          FOREIGN KEY (NUMPAIEMENT)
               REFERENCES PAIEMENT (NUMPAIEMENT))   ;

ALTER TABLE CLIENT ADD (
     CONSTRAINT FK_CLIENT_ACTEUR
          FOREIGN KEY (IDACTEUR)
               REFERENCES ACTEUR (IDACTEUR))   ;

ALTER TABLE ARTICLE ADD (
     CONSTRAINT FK_ARTICLE_CATEGORIE
          FOREIGN KEY (NOMCATEGORIE)
               REFERENCES CATEGORIE (NOMCATEGORIE))   ;

ALTER TABLE DETAILCOMMANDE ADD (
     CONSTRAINT FK_DETAILCOMMANDE_COMMANDE
          FOREIGN KEY (IDCOMMANDE)
               REFERENCES COMMANDE (IDCOMMANDE))   ;

ALTER TABLE DETAILCOMMANDE ADD (
     CONSTRAINT FK_DETAILCOMMANDE_ARTICLE
          FOREIGN KEY (IDARTICLE)
               REFERENCES ARTICLE (IDARTICLE))   ;

ALTER TABLE AVIS ADD (
     CONSTRAINT FK_AVIS_CLIENT
          FOREIGN KEY (IDACTEUR)
               REFERENCES CLIENT (IDACTEUR))   ;

ALTER TABLE AVIS ADD (
     CONSTRAINT FK_AVIS_ARTICLE
          FOREIGN KEY (IDARTICLE)
               REFERENCES ARTICLE (IDARTICLE))   ;

ALTER TABLE PANIER ADD (
     CONSTRAINT FK_PANIER_CLIENT
          FOREIGN KEY (IDACTEUR)
               REFERENCES CLIENT (IDACTEUR))   ;

ALTER TABLE PANIER ADD (
     CONSTRAINT FK_PANIER_ARTICLE
          FOREIGN KEY (IDARTICLE)
               REFERENCES ARTICLE (IDARTICLE))   ;


-- -----------------------------------------------------------------------------
--                FIN DE GENERATION
-- -----------------------------------------------------------------------------