DROP TABLE CARTEBANCAIRE CASCADE CONSTRAINTS;

DROP TABLE PAIEMENT CASCADE CONSTRAINTS;

DROP TABLE CATEGORIE CASCADE CONSTRAINTS;

DROP TABLE COMMANDE CASCADE CONSTRAINTS;

DROP TABLE CRYPTOMONNAIE CASCADE CONSTRAINTS;

DROP TABLE ARTICLE CASCADE CONSTRAINTS;

DROP TABLE ACTEUR CASCADE CONSTRAINTS;

DROP TABLE DETAILCOMMANDE CASCADE CONSTRAINTS;

DROP TABLE AVIS CASCADE CONSTRAINTS;

DROP TABLE PANIER CASCADE CONSTRAINTS;

DROP TABLE COULEUR CASCADE CONSTRAINTS;

DROP SEQUENCE SEQ_ACTEUR;
DROP SEQUENCE SEQ_ARTICLE;
DROP SEQUENCE SEQ_COMMANDE;
DROP SEQUENCE SEQ_PAIEMENT;

CREATE TABLE CARTEBANCAIRE
   (
    NUMCB CHAR(16)  NOT NULL,
    NUMPAIEMENT NUMBER(6)  NOT NULL,
    IDACTEUR NUMBER(5)  NOT NULL,
    NOMCB VARCHAR(30)  NULL,
    DATEEXPIRATION CHAR(4)  NULL,
    CRYPTOGRAMME NUMBER(3)  NULL,
    SUPPORTPAIEMENT CHAR(1)  NULL,
    CONSTRAINT PK_CARTEBANCAIRE PRIMARY KEY (NUMCB),
    CONSTRAINT CH_SUPPAIEMENTCB CHECK(SUPPORTPAIEMENT='M' OR SUPPORTPAIEMENT='V')
   ) ;

CREATE  INDEX I_FK_CARTEBANCAIRE_ACTEUR
     ON CARTEBANCAIRE (IDACTEUR ASC)
    ;

CREATE  INDEX I_FK_CARTEBANCAIRE_PAIEMENT
     ON CARTEBANCAIRE (NUMPAIEMENT ASC)
    ;


CREATE TABLE PAIEMENT
   (
    NUMPAIEMENT NUMBER(6)  NOT NULL,
    SUPPORTPAIEMENT CHAR(1)  NULL,
    CONSTRAINT PK_PAIEMENT PRIMARY KEY (NUMPAIEMENT),
    CONSTRAINT CH_SUPPAIEMENT CHECK (SUPPORTPAIEMENT='M' OR SUPPORTPAIEMENT='V' OR SUPPORTPAIEMENT='B' OR SUPPORTPAIEMENT='E')
   ) ;


CREATE TABLE CATEGORIE
   (
    NOMCATEGORIE VARCHAR(128)  NOT NULL,
    LIBELLECATEGORIE VARCHAR(128)  NULL,
    CONSTRAINT PK_CATEGORIE PRIMARY KEY (NOMCATEGORIE),
    CONSTRAINT CH_NOMCATEGORIE CHECK(NOMCATEGORIE='PELUCHES' OR NOMCATEGORIE='POSTERS' OR NOMCATEGORIE='FIGURINES')
   ) ;

CREATE TABLE COMMANDE
   (
    IDCOMMANDE NUMBER(10)  NOT NULL,
    NUMPAIEMENT NUMBER(6)  NOT NULL,
    IDACTEUR NUMBER(5)  NOT NULL,
    DATECOMMANDE DATE  NULL,
    ADRLIVRAISON VARCHAR(128)  NULL,
    INSTRUCTIONSCOMMANDE VARCHAR(128)  NULL,
    ETATCOMMANDE CHAR(1)  NULL,
    CONSTRAINT PK_COMMANDE PRIMARY KEY (IDCOMMANDE),
    CONSTRAINT CH_ETATCOMMANDE CHECK(ETATCOMMANDE='T' OR ETATCOMMANDE='P' OR ETATCOMMANDE='E' OR ETATCOMMANDE='R')
   ) ;


CREATE  INDEX I_FK_COMMANDE_ACTEUR
     ON COMMANDE (IDACTEUR ASC)
    ;

CREATE  INDEX I_FK_COMMANDE_PAIEMENT
     ON COMMANDE (NUMPAIEMENT ASC)
    ;

CREATE TABLE CRYPTOMONNAIE
   (
    NUMREF NUMBER(10)  NOT NULL,
    NUMPAIEMENT NUMBER(6)  NOT NULL,
    SUPPORTPAIEMENT CHAR(1)  NULL,
    CONSTRAINT PK_CRYPTOMONNAIE PRIMARY KEY (NUMREF),
    CONSTRAINT CH_SUPPAIEMENTCM CHECK(SUPPORTPAIEMENT='B' OR SUPPORTPAIEMENT='E')
   ) ;


CREATE  INDEX I_FK_CRYPTOMONNAIE_PAIEMENT
     ON CRYPTOMONNAIE (NUMPAIEMENT ASC)
    ;

CREATE TABLE ARTICLE
   (
    IDARTICLE NUMBER(5)  NOT NULL,
    NOMARTICLE VARCHAR(128) NOT NULL,
    NOMCATEGORIE VARCHAR(128)  NOT NULL,
    PRIXARTICLE DECIMAL(8,2)  NULL,
    PRIXPROMO NUMBER(2)  NULL,
    DESCRIPTION VARCHAR(200) NULL,
    CONSTRAINT PK_ARTICLE PRIMARY KEY (IDARTICLE),
    CONSTRAINT CH_PRIXARTICLE CHECK(PRIXARTICLE > 0 AND PRIXARTICLE < 1000000),
    CONSTRAINT CH_PRIXPROMO CHECK(PRIXPROMO >= 0 AND PRIXPROMO < 100)
   ) ;


CREATE  INDEX I_FK_ARTICLE_CATEGORIE
     ON ARTICLE (NOMCATEGORIE ASC)
    ;


CREATE TABLE ACTEUR
   (
    IDACTEUR NUMBER(5)  NOT NULL,
    NOMACTEUR VARCHAR(32)  NULL,
    PRENOMACTEUR VARCHAR(32)  NULL,
    ADRACTEUR VARCHAR(128)  NULL,
    MAILACTEUR VARCHAR(128)  NULL,
    MDPACTEUR VARCHAR(128)  NULL,
    PREFLANGUE CHAR(2)  NULL,
    PREFTHEME CHAR(6)  NULL,
    PTSFIDELITECLIENT NUMBER(3)  NULL,
    PREFMONNAIE CHAR(10)  NULL,
    ROLEACTEUR VARCHAR(8) NULL,
    CONSTRAINT PK_ACTEUR PRIMARY KEY (IDACTEUR),
    CONSTRAINT CH_PREFLANGUEAC CHECK(PREFLANGUE='FR' OR PREFLANGUE='EN'),
    CONSTRAINT CH_PREFTHEMEAC CHECK(PREFTHEME='CLAIR' OR PREFTHEME='SOMBRE'),
    CONSTRAINT CH_ROLEACTEUR CHECK(ROLEACTEUR='Client' OR ROLEACTEUR='Artiste' OR ROLEACTEUR='Admin')
   ) ;


CREATE TABLE DETAILCOMMANDE
   (
    IDCOMMANDE NUMBER(10)  NOT NULL,
    IDARTICLE NUMBER(5)  NOT NULL,
    QUANTITEARTICLE NUMBER(3)  NULL,
    PRIXARTICLEFIXE DECIMAL(8,2)  NULL,
    COULEUR VARCHAR(32)  NULL,
    CONSTRAINT PK_DETAILCOMMANDE PRIMARY KEY (IDCOMMANDE, IDARTICLE, COULEUR),
    CONSTRAINT CH_QUANTITEARTICLEDC CHECK(QUANTITEARTICLE >= 1 AND QUANTITEARTICLE <= 999),
    CONSTRAINT CH_PRIXARTICLEFIXE CHECK(PRIXARTICLEFIXE >= 1 AND PRIXARTICLEFIXE < 1000000)
   ) ;


CREATE  INDEX I_FK_DETAILCOMMANDE_COMMANDE
     ON DETAILCOMMANDE (IDCOMMANDE ASC)
    ;

CREATE  INDEX I_FK_DETAILCOMMANDE_ARTICLE
     ON DETAILCOMMANDE (IDARTICLE ASC)
    ;


CREATE TABLE AVIS
   (
    IDACTEUR NUMBER(5)  NOT NULL,
    IDARTICLE NUMBER(5)  NOT NULL,
    AVIS VARCHAR(500)  NULL,
    NOTE DECIMAL(2,1)  NULL,
    CONSTRAINT PK_AVIS PRIMARY KEY (IDACTEUR, IDARTICLE),
    CONSTRAINT CH_NOTE_AVIS CHECK(NOTE<=5)
   ) ;


CREATE  INDEX I_FK_AVIS_ACTEUR
     ON AVIS (IDACTEUR ASC)
    ;

CREATE  INDEX I_FK_AVIS_ARTICLE
     ON AVIS (IDARTICLE ASC)
    ;


CREATE TABLE PANIER
   (
    IDACTEUR NUMBER(5)  NOT NULL,
    IDARTICLE NUMBER(5)  NOT NULL,
    QUANTITEARTICLE NUMBER(3)  NULL,
    COULEUR VARCHAR(32)  NULL,
    CONSTRAINT PK_PANIER PRIMARY KEY (IDACTEUR, IDARTICLE, COULEUR),
    CONSTRAINT CH_QUANTITEARTICLEP CHECK(QUANTITEARTICLE >= 0 AND QUANTITEARTICLE <= 999)
   ) ;

CREATE TABLE COULEUR
   (
    IDARTICLE NUMBER(5)  NOT NULL,
    COULEUR VARCHAR(32)  NULL,
    CONSTRAINT PK_COULEUR PRIMARY KEY (IDARTICLE, COULEUR)
   ) ;

CREATE  INDEX I_FK_COULEUR_ARTICLE
     ON COULEUR (IDARTICLE ASC)
    ;

CREATE  INDEX I_FK_PANIER_ACTEUR
     ON PANIER (IDACTEUR ASC)
    ;

CREATE  INDEX I_FK_PANIER_ARTICLE
     ON PANIER (IDARTICLE ASC)
    ;

ALTER TABLE COULEUR ADD (
     CONSTRAINT FK_COULEUR_ARTICLE
          FOREIGN KEY (IDARTICLE)
               REFERENCES ARTICLE (IDARTICLE)
                    ON DELETE CASCADE)   ;

ALTER TABLE CARTEBANCAIRE ADD (
     CONSTRAINT FK_CARTEBANCAIRE_ACTEUR
          FOREIGN KEY (IDACTEUR)
               REFERENCES ACTEUR (IDACTEUR)
                    ON DELETE CASCADE)   ;

ALTER TABLE CARTEBANCAIRE ADD (
     CONSTRAINT FK_CARTEBANCAIRE_PAIEMENT
          FOREIGN KEY (NUMPAIEMENT)
               REFERENCES PAIEMENT (NUMPAIEMENT)
                    ON DELETE CASCADE)   ;

ALTER TABLE COMMANDE ADD (
     CONSTRAINT FK_COMMANDE_ACTEUR
          FOREIGN KEY (IDACTEUR)
               REFERENCES ACTEUR (IDACTEUR)
                    ON DELETE CASCADE)   ;

ALTER TABLE COMMANDE ADD (
     CONSTRAINT FK_COMMANDE_PAIEMENT
          FOREIGN KEY (NUMPAIEMENT)
               REFERENCES PAIEMENT (NUMPAIEMENT)
                    ON DELETE CASCADE)   ;

ALTER TABLE CRYPTOMONNAIE ADD (
     CONSTRAINT FK_CRYPTOMONNAIE_PAIEMENT
          FOREIGN KEY (NUMPAIEMENT)
               REFERENCES PAIEMENT (NUMPAIEMENT)
                    ON DELETE CASCADE)   ;

ALTER TABLE ARTICLE ADD (
     CONSTRAINT FK_ARTICLE_CATEGORIE
          FOREIGN KEY (NOMCATEGORIE)
               REFERENCES CATEGORIE (NOMCATEGORIE)
                    ON DELETE CASCADE)   ;

ALTER TABLE DETAILCOMMANDE ADD (
     CONSTRAINT FK_DETAILCOMMANDE_COMMANDE
          FOREIGN KEY (IDCOMMANDE)
               REFERENCES COMMANDE (IDCOMMANDE)
                    ON DELETE CASCADE)   ;

ALTER TABLE DETAILCOMMANDE ADD (
     CONSTRAINT FK_DETAILCOMMANDE_ARTICLE
          FOREIGN KEY (IDARTICLE)
               REFERENCES ARTICLE (IDARTICLE)
                    ON DELETE CASCADE)   ;

ALTER TABLE AVIS ADD (
     CONSTRAINT FK_AVIS_ACTEUR
          FOREIGN KEY (IDACTEUR)
               REFERENCES ACTEUR (IDACTEUR)
                    ON DELETE CASCADE)   ;

ALTER TABLE AVIS ADD (
     CONSTRAINT FK_AVIS_ARTICLE
          FOREIGN KEY (IDARTICLE)
               REFERENCES ARTICLE (IDARTICLE)
                    ON DELETE CASCADE)   ;

ALTER TABLE PANIER ADD (
     CONSTRAINT FK_PANIER_ACTEUR
          FOREIGN KEY (IDACTEUR)
               REFERENCES ACTEUR (IDACTEUR)
                    ON DELETE CASCADE)   ;

ALTER TABLE PANIER ADD (
     CONSTRAINT FK_PANIER_ARTICLE
          FOREIGN KEY (IDARTICLE)
               REFERENCES ARTICLE (IDARTICLE)
                    ON DELETE CASCADE)   ;

create sequence SEQ_ACTEUR;
create sequence SEQ_ARTICLE;
create sequence SEQ_COMMANDE;
create sequence SEQ_PAIEMENT;